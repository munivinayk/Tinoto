{"ast":null,"code":"export default class QuickLRU extends Map {\n  #size = 0;\n  #cache = new Map();\n  #oldCache = new Map();\n  #maxSize;\n  #maxAge;\n  #onEviction;\n  constructor(options = {}) {\n    super();\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0');\n    }\n    if (typeof options.maxAge === 'number' && options.maxAge === 0) {\n      throw new TypeError('`maxAge` must be a number greater than 0');\n    }\n    this.#maxSize = options.maxSize;\n    this.#maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n    this.#onEviction = options.onEviction;\n  }\n\n  // For tests.\n  get __oldCache() {\n    return this.#oldCache;\n  }\n  #emitEvictions(cache) {\n    if (typeof this.#onEviction !== 'function') {\n      return;\n    }\n    for (const [key, item] of cache) {\n      this.#onEviction(key, item.value);\n    }\n  }\n  #deleteIfExpired(key, item) {\n    if (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n      if (typeof this.#onEviction === 'function') {\n        this.#onEviction(key, item.value);\n      }\n      return this.delete(key);\n    }\n    return false;\n  }\n  #getOrDeleteIfExpired(key, item) {\n    const deleted = this.#deleteIfExpired(key, item);\n    if (deleted === false) {\n      return item.value;\n    }\n  }\n  #getItemValue(key, item) {\n    return item.expiry ? this.#getOrDeleteIfExpired(key, item) : item.value;\n  }\n  #peek(key, cache) {\n    const item = cache.get(key);\n    return this.#getItemValue(key, item);\n  }\n  #set(key, value) {\n    this.#cache.set(key, value);\n    this.#size++;\n    if (this.#size >= this.#maxSize) {\n      this.#size = 0;\n      this.#emitEvictions(this.#oldCache);\n      this.#oldCache = this.#cache;\n      this.#cache = new Map();\n    }\n  }\n  #moveToRecent(key, item) {\n    this.#oldCache.delete(key);\n    this.#set(key, item);\n  }\n  *#entriesAscending() {\n    for (const item of this.#oldCache) {\n      const [key, value] = item;\n      if (!this.#cache.has(key)) {\n        const deleted = this.#deleteIfExpired(key, value);\n        if (deleted === false) {\n          yield item;\n        }\n      }\n    }\n    for (const item of this.#cache) {\n      const [key, value] = item;\n      const deleted = this.#deleteIfExpired(key, value);\n      if (deleted === false) {\n        yield item;\n      }\n    }\n  }\n  get(key) {\n    if (this.#cache.has(key)) {\n      const item = this.#cache.get(key);\n      return this.#getItemValue(key, item);\n    }\n    if (this.#oldCache.has(key)) {\n      const item = this.#oldCache.get(key);\n      if (this.#deleteIfExpired(key, item) === false) {\n        this.#moveToRecent(key, item);\n        return item.value;\n      }\n    }\n  }\n  set(key, value, {\n    maxAge = this.#maxAge\n  } = {}) {\n    const expiry = typeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ? Date.now() + maxAge : undefined;\n    if (this.#cache.has(key)) {\n      this.#cache.set(key, {\n        value,\n        expiry\n      });\n    } else {\n      this.#set(key, {\n        value,\n        expiry\n      });\n    }\n    return this;\n  }\n  has(key) {\n    if (this.#cache.has(key)) {\n      return !this.#deleteIfExpired(key, this.#cache.get(key));\n    }\n    if (this.#oldCache.has(key)) {\n      return !this.#deleteIfExpired(key, this.#oldCache.get(key));\n    }\n    return false;\n  }\n  peek(key) {\n    if (this.#cache.has(key)) {\n      return this.#peek(key, this.#cache);\n    }\n    if (this.#oldCache.has(key)) {\n      return this.#peek(key, this.#oldCache);\n    }\n  }\n  delete(key) {\n    const deleted = this.#cache.delete(key);\n    if (deleted) {\n      this.#size--;\n    }\n    return this.#oldCache.delete(key) || deleted;\n  }\n  clear() {\n    this.#cache.clear();\n    this.#oldCache.clear();\n    this.#size = 0;\n  }\n  resize(newSize) {\n    if (!(newSize && newSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0');\n    }\n    const items = [...this.#entriesAscending()];\n    const removeCount = items.length - newSize;\n    if (removeCount < 0) {\n      this.#cache = new Map(items);\n      this.#oldCache = new Map();\n      this.#size = items.length;\n    } else {\n      if (removeCount > 0) {\n        this.#emitEvictions(items.slice(0, removeCount));\n      }\n      this.#oldCache = new Map(items.slice(removeCount));\n      this.#cache = new Map();\n      this.#size = 0;\n    }\n    this.#maxSize = newSize;\n  }\n  *keys() {\n    for (const [key] of this) {\n      yield key;\n    }\n  }\n  *values() {\n    for (const [, value] of this) {\n      yield value;\n    }\n  }\n  *[Symbol.iterator]() {\n    for (const item of this.#cache) {\n      const [key, value] = item;\n      const deleted = this.#deleteIfExpired(key, value);\n      if (deleted === false) {\n        yield [key, value.value];\n      }\n    }\n    for (const item of this.#oldCache) {\n      const [key, value] = item;\n      if (!this.#cache.has(key)) {\n        const deleted = this.#deleteIfExpired(key, value);\n        if (deleted === false) {\n          yield [key, value.value];\n        }\n      }\n    }\n  }\n  *entriesDescending() {\n    let items = [...this.#cache];\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i];\n      const [key, value] = item;\n      const deleted = this.#deleteIfExpired(key, value);\n      if (deleted === false) {\n        yield [key, value.value];\n      }\n    }\n    items = [...this.#oldCache];\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i];\n      const [key, value] = item;\n      if (!this.#cache.has(key)) {\n        const deleted = this.#deleteIfExpired(key, value);\n        if (deleted === false) {\n          yield [key, value.value];\n        }\n      }\n    }\n  }\n  *entriesAscending() {\n    for (const [key, value] of this.#entriesAscending()) {\n      yield [key, value.value];\n    }\n  }\n  get size() {\n    if (!this.#size) {\n      return this.#oldCache.size;\n    }\n    let oldCacheSize = 0;\n    for (const key of this.#oldCache.keys()) {\n      if (!this.#cache.has(key)) {\n        oldCacheSize++;\n      }\n    }\n    return Math.min(this.#size + oldCacheSize, this.#maxSize);\n  }\n  get maxSize() {\n    return this.#maxSize;\n  }\n  entries() {\n    return this.entriesAscending();\n  }\n  forEach(callbackFunction, thisArgument = this) {\n    for (const [key, value] of this.entriesAscending()) {\n      callbackFunction.call(thisArgument, value, key, this);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return JSON.stringify([...this.entriesAscending()]);\n  }\n}","map":{"version":3,"names":["QuickLRU","Map","size","cache","oldCache","maxSize","maxAge","onEviction","constructor","options","TypeError","Number","POSITIVE_INFINITY","__oldCache","emitEvictions","#emitEvictions","key","item","value","deleteIfExpired","#deleteIfExpired","expiry","Date","now","delete","getOrDeleteIfExpired","#getOrDeleteIfExpired","deleted","getItemValue","#getItemValue","peek","#peek","get","set","#set","moveToRecent","#moveToRecent","entriesAscending","#entriesAscending","has","undefined","clear","resize","newSize","items","removeCount","length","slice","keys","values","Symbol","iterator","entriesDescending","i","oldCacheSize","Math","min","entries","forEach","callbackFunction","thisArgument","call","toStringTag","JSON","stringify"],"sources":["/Users/vinaykamisettymuni/Documents/GitHub/Tinoto/client/node_modules/quick-lru/index.js"],"sourcesContent":["export default class QuickLRU extends Map {\n\t#size = 0;\n\t#cache = new Map();\n\t#oldCache = new Map();\n\t#maxSize;\n\t#maxAge;\n\t#onEviction;\n\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\tthis.#maxSize = options.maxSize;\n\t\tthis.#maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.#onEviction = options.onEviction;\n\t}\n\n\t// For tests.\n\tget __oldCache() {\n\t\treturn this.#oldCache;\n\t}\n\n\t#emitEvictions(cache) {\n\t\tif (typeof this.#onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.#onEviction(key, item.value);\n\t\t}\n\t}\n\n\t#deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.#onEviction === 'function') {\n\t\t\t\tthis.#onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this.#deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t#getItemValue(key, item) {\n\t\treturn item.expiry ? this.#getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t#peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this.#getItemValue(key, item);\n\t}\n\n\t#set(key, value) {\n\t\tthis.#cache.set(key, value);\n\t\tthis.#size++;\n\n\t\tif (this.#size >= this.#maxSize) {\n\t\t\tthis.#size = 0;\n\t\t\tthis.#emitEvictions(this.#oldCache);\n\t\t\tthis.#oldCache = this.#cache;\n\t\t\tthis.#cache = new Map();\n\t\t}\n\t}\n\n\t#moveToRecent(key, item) {\n\t\tthis.#oldCache.delete(key);\n\t\tthis.#set(key, item);\n\t}\n\n\t* #entriesAscending() {\n\t\tfor (const item of this.#oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.#cache.has(key)) {\n\t\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.#cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.#cache.has(key)) {\n\t\t\tconst item = this.#cache.get(key);\n\t\t\treturn this.#getItemValue(key, item);\n\t\t}\n\n\t\tif (this.#oldCache.has(key)) {\n\t\t\tconst item = this.#oldCache.get(key);\n\t\t\tif (this.#deleteIfExpired(key, item) === false) {\n\t\t\t\tthis.#moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.#maxAge} = {}) {\n\t\tconst expiry = typeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY\n\t\t\t? (Date.now() + maxAge)\n\t\t\t: undefined;\n\n\t\tif (this.#cache.has(key)) {\n\t\t\tthis.#cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.#set(key, {value, expiry});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\tif (this.#cache.has(key)) {\n\t\t\treturn !this.#deleteIfExpired(key, this.#cache.get(key));\n\t\t}\n\n\t\tif (this.#oldCache.has(key)) {\n\t\t\treturn !this.#deleteIfExpired(key, this.#oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.#cache.has(key)) {\n\t\t\treturn this.#peek(key, this.#cache);\n\t\t}\n\n\t\tif (this.#oldCache.has(key)) {\n\t\t\treturn this.#peek(key, this.#oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.#cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis.#size--;\n\t\t}\n\n\t\treturn this.#oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.#cache.clear();\n\t\tthis.#oldCache.clear();\n\t\tthis.#size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this.#entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.#cache = new Map(items);\n\t\t\tthis.#oldCache = new Map();\n\t\t\tthis.#size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis.#emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.#oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.#cache = new Map();\n\t\t\tthis.#size = 0;\n\t\t}\n\n\t\tthis.#maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.#cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.#oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.#cache.has(key)) {\n\t\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.#cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.#oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.#cache.has(key)) {\n\t\t\t\tconst deleted = this.#deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this.#entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this.#size) {\n\t\t\treturn this.#oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.#oldCache.keys()) {\n\t\t\tif (!this.#cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this.#size + oldCacheSize, this.#maxSize);\n\t}\n\n\tget maxSize() {\n\t\treturn this.#maxSize;\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}